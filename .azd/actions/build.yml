parameters:
- name: workingDirectory
- name: test
  type: boolean
  default: true
- name: artifact
  type: boolean
  default: false

steps:
- task: UseDotNet@2
  displayName: 'dotnet install'
  inputs:
    packageType: 'sdk'
    version: '7.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '${{ parameters.workingDirectory }}/**/*.csproj'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    projects: '${{ parameters.workingDirectory }}/**/*.csproj'

- ${{ if eq(parameters['test'], 'true' ) }}:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: 'test'
      arguments: '--no-build'
      projects: '${{ parameters.workingDirectory }}/**/*.csproj'

- ${{ if eq(parameters['artifact'], 'true' ) }}:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish api'
    inputs:
      command: 'publish'
      publishWebProjects: False
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/messages/publish'
      projects: '${{ parameters.workingDirectory }}/OurGame.Messages/*.csproj'
      zipAfterPublish: True

  - task: PublishPipelineArtifact@1
    displayName: 'Publish web artifact'
    inputs:
      path: '$(Build.ArtifactStagingDirectory)/messages/publish'
      artifact: messages
