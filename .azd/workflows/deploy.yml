pool:
  vmImage: 'ubuntu-latest'

trigger: none

variables:
  - template: ../actions/variables.yml

stages:
- stage: 'Build'
  displayName: 'Version, Plan Infra, Build & Publish, Docs'

  jobs:
  - job: 'Version'
    displayName: 'Version'
    steps:
    - template: ../actions/version.yml
      parameters:
        version: $(version)

  - job: 'Infra'
    displayName: 'Plan Infra'
    dependsOn: ["Version"]
    steps:
    - template: ../actions/app-config.yml
      parameters:
        serviceConnection: $(serviceConnection)
        appConfigName: $(appConfigName)
        environment: $(environment)

    - template: ../actions/tf-plan.yml
      parameters:
        serviceConnection: $(serviceConnection)
        subscriptionId: $(Devops:SubscriptionId)
        storageAccountName: $(Devops:StorageName)
        containerName: $(Devops:ContainerName)
        workingDirectory: '$(Build.SourcesDirectory)/build/infra'
        environment: $(environment)
        db_username: $(Devops:DB:Username)
        db_password: $(Devops:DB:Password)
        keyVaultName: $(Devops:KeyVault)
        appConfigName: $(appConfigName)

  - job: 'Build'
    displayName: 'Build & Publish'
    dependsOn: ["Version"]
    steps:
    - template: ../actions/build.yml
      parameters:
        workingDirectory: '$(Build.SourcesDirectory)/src'
        test: false
        artifact: true

  - job: 'Docs'
    displayName: 'Docs'
    dependsOn: ["Version"]
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Design'
      inputs:
        path: '$(Build.SourcesDirectory)/build/docs/static/images/design.json'
        artifact: design

- stage: 'Deploy_Dev'
  displayName: 'Dev Deployment'
  dependsOn: ['Build']
  jobs:
  - deployment: 'Deploy_Dev'
    displayName: 'Dev Deploy Infra, Code and Docs'
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../actions/app-config.yml
            parameters:
              serviceConnection: $(serviceConnection)
              appConfigName: $(appConfigName)
              environment: $(environment)

          - template: ../actions/tf-apply.yml
            parameters:
              serviceConnection: $(serviceConnection)
              subscriptionId: $(Devops:SubscriptionId)
              storageAccountName: $(Devops:StorageName)
              containerName: $(Devops:ContainerName)
              workingDirectory: '$(Agent.BuildDirectory)/infra'
              environment: $(environment)
              db_username: $(Devops:DB:Username)
              db_password: $(Devops:DB:Password)
              keyVaultName: $(Devops:KeyVault)
              appConfigName: $(appConfigName)

          - template: ../actions/deploy-api.yml
            parameters:
              serviceConnection: $(serviceConnection)
              workingDirectory: '$(Agent.BuildDirectory)/messages'
              appServiceName: $(TF_OUT_FUNCTION_APP_NAME)
              
          - template: ../actions/design.yml
            parameters:
              serviceConnection: $(serviceConnection)
              workingDirectory: '$(Agent.BuildDirectory)'
              environment: $(environment)